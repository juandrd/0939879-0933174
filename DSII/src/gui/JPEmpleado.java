/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controladores.*;
import entidades.*;
import java.sql.Time;
import java.util.LinkedList;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Juan
 */
public class JPEmpleado extends javax.swing.JPanel {

    /**
     * Creates new form JPEmpleado
     */
    ControladorEmpleado controladorEmpleado;
    ControladorAuxiliar controladorAuxiliar;
    ControladorDirectorEstacion controladorDirEstacion;
    ControladorDirectorOperativo controladorDirOperativo;
    ControladorEstacion controladorEstacion;
    ControladorConductor controladorConductor;
   

    public JPEmpleado() {
        initComponents();
        controladorEmpleado = new ControladorEmpleado();
        controladorAuxiliar = new ControladorAuxiliar();
        controladorDirEstacion = new ControladorDirectorEstacion();
        controladorDirOperativo = new ControladorDirectorOperativo();
        controladorEstacion=new ControladorEstacion();
        controladorConductor =  new ControladorConductor();
        
        
        
        
        
        //SPINNERS RESTRINGIR HORA Y MINUTOS
        SpinnerNumberModel modeloSpinnersHE= new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerNumberModel modeloSpinnersHS= new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerNumberModel modeloSpinnersME= new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerNumberModel modeloSpinnersMS= new SpinnerNumberModel(0, 0, 59, 1);
        jSHoraEntrada.setModel(modeloSpinnersHE);
        jSHoraSalida.setModel(modeloSpinnersHS);
        jSMinutosEntrada.setModel(modeloSpinnersME);
        jSMinutosSalida.setModel(modeloSpinnersMS);
        JFormattedTextField tfHE = ((JSpinner.DefaultEditor)jSHoraEntrada.getEditor())
        .getTextField();
        tfHE.setEditable(false);
        //----------------------
         JFormattedTextField tfHS = ((JSpinner.DefaultEditor)jSHoraSalida.getEditor())
        .getTextField();
        tfHS.setEditable(false);
        //----------------------
          JFormattedTextField tfME = ((JSpinner.DefaultEditor)jSMinutosEntrada.getEditor())
        .getTextField();
        tfME.setEditable(false);
        //----------------------
         JFormattedTextField tfMS = ((JSpinner.DefaultEditor)jSMinutosSalida.getEditor())
        .getTextField();
        tfMS.setEditable(false);
        //----------------------
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTPEmpleado = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTFTelefono1 = new javax.swing.JTextField();
        jTFId1 = new javax.swing.JTextField();
        jTFDireccion1 = new javax.swing.JTextField();
        jBLimpiar1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jTFApellido1 = new javax.swing.JTextField();
        jTFNombre1 = new javax.swing.JTextField();
        jTFEmail1 = new javax.swing.JTextField();
        jCBGenero1 = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTFSalario1 = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 2), new java.awt.Dimension(0, 2), new java.awt.Dimension(32767, 2));
        jLabel2 = new javax.swing.JLabel();
        jCBTipo1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCBEstaciones1 = new javax.swing.JComboBox();
        jBCrearAuxiliar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jBCrearConductor = new javax.swing.JButton();
        jSHoraEntrada = new javax.swing.JSpinner();
        jSMinutosEntrada = new javax.swing.JSpinner();
        jSMinutosSalida = new javax.swing.JSpinner();
        jSHoraSalida = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        jBCrearDirectorEstacion = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jBCrearDirectorOperativo = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jBLimpiarConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTResultados = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jTFId2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTFSalario2 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTFApellido2 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jCBGenero2 = new javax.swing.JComboBox();
        jBConsultar1 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jCBTipo2 = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        jTFNombre2 = new javax.swing.JTextField();
        jBConsultarPorTipo = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jBModificar = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jTFId3 = new javax.swing.JTextField();
        jTFNombre3 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTFApellido3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jCBGenero3 = new javax.swing.JComboBox();
        jTFTelefono3 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTFDireccion3 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jTFEmail3 = new javax.swing.JTextField();
        jPFPassword3 = new javax.swing.JPasswordField();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jCBEstaciones2 = new javax.swing.JComboBox();
        jPanel12 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSHoraEntrada1 = new javax.swing.JSpinner();
        jSMinutosEntrada1 = new javax.swing.JSpinner();
        jSMinutosSalida1 = new javax.swing.JSpinner();
        jSHoraSalida1 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jTFSalario3 = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Empleado"));

        jPanel7.setLayout(null);

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.setLayout(null);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Dirección");
        jPanel8.add(jLabel11);
        jLabel11.setBounds(10, 160, 70, 30);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Identificación");
        jPanel8.add(jLabel12);
        jLabel12.setBounds(10, 10, 80, 30);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Nombres");
        jPanel8.add(jLabel13);
        jLabel13.setBounds(-20, 50, 120, 30);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Genero");
        jPanel8.add(jLabel14);
        jLabel14.setBounds(0, 250, 80, 40);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Telefono");
        jPanel8.add(jLabel15);
        jLabel15.setBounds(0, 120, 80, 40);
        jPanel8.add(jTFTelefono1);
        jTFTelefono1.setBounds(100, 130, 130, 30);
        jPanel8.add(jTFId1);
        jTFId1.setBounds(100, 10, 130, 30);
        jPanel8.add(jTFDireccion1);
        jTFDireccion1.setBounds(100, 170, 130, 30);

        jBLimpiar1.setText("Limpiar");
        jBLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiar1ActionPerformed(evt);
            }
        });
        jPanel8.add(jBLimpiar1);
        jBLimpiar1.setBounds(420, 450, 70, 23);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Apellidos");
        jPanel8.add(jLabel16);
        jLabel16.setBounds(0, 80, 80, 30);
        jPanel8.add(jTFApellido1);
        jTFApellido1.setBounds(100, 90, 130, 30);
        jPanel8.add(jTFNombre1);
        jTFNombre1.setBounds(100, 50, 130, 30);
        jPanel8.add(jTFEmail1);
        jTFEmail1.setBounds(100, 210, 130, 30);

        jCBGenero1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));
        jPanel8.add(jCBGenero1);
        jCBGenero1.setBounds(100, 260, 130, 20);

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Email");
        jPanel8.add(jLabel28);
        jLabel28.setBounds(10, 210, 60, 30);

        jLabel1.setText("Salario");
        jPanel8.add(jLabel1);
        jLabel1.setBounds(20, 300, 70, 14);

        jTFSalario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFSalario1ActionPerformed(evt);
            }
        });
        jPanel8.add(jTFSalario1);
        jTFSalario1.setBounds(100, 290, 130, 30);
        jPanel8.add(filler1);
        filler1.setBounds(380, 0, 0, 300);

        jLabel2.setText("Tipo");
        jPanel8.add(jLabel2);
        jLabel2.setBounds(30, 340, 34, 14);

        jCBTipo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Auxiliar", "Conductor", "Director Estacion", "Director Operativo", "" }));
        jCBTipo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBTipo1ItemStateChanged(evt);
            }
        });
        jPanel8.add(jCBTipo1);
        jCBTipo1.setBounds(100, 340, 130, 20);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Auxiliar"));

        jLabel3.setText("Estacion");

        jCBEstaciones1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBEstaciones1PopupMenuWillBecomeVisible(evt);
            }
        });

        jBCrearAuxiliar.setText("Crear");
        jBCrearAuxiliar.setEnabled(false);
        jBCrearAuxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearAuxiliarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jCBEstaciones1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBCrearAuxiliar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCBEstaciones1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBCrearAuxiliar)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel1);
        jPanel1.setBounds(250, 10, 240, 110);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Conductor"));

        jLabel4.setText("Hora Entrada");

        jLabel5.setText("Hora Salida");

        jBCrearConductor.setText("Crear");
        jBCrearConductor.setEnabled(false);
        jBCrearConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearConductorActionPerformed(evt);
            }
        });

        jSHoraEntrada.setToolTipText("hora");

        jSMinutosEntrada.setToolTipText("minutos");

        jSMinutosSalida.setToolTipText("minutos");

        jSHoraSalida.setToolTipText("hora");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSHoraSalida, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jSHoraEntrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSMinutosEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jBCrearConductor)
                    .addComponent(jSMinutosSalida))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSHoraEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSMinutosEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSMinutosSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBCrearConductor)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel2);
        jPanel2.setBounds(250, 120, 270, 160);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Director de Estacion"));

        jBCrearDirectorEstacion.setText("Crear");
        jBCrearDirectorEstacion.setEnabled(false);
        jBCrearDirectorEstacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearDirectorEstacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addComponent(jBCrearDirectorEstacion)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBCrearDirectorEstacion)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel5);
        jPanel5.setBounds(250, 280, 240, 80);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Director Operativo"));

        jBCrearDirectorOperativo.setText("Crear");
        jBCrearDirectorOperativo.setEnabled(false);
        jBCrearDirectorOperativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearDirectorOperativoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addComponent(jBCrearDirectorOperativo)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBCrearDirectorOperativo)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel6);
        jPanel6.setBounds(250, 370, 240, 70);

        jPanel7.add(jPanel8);
        jPanel8.setBounds(0, 0, 540, 500);

        jTPEmpleado.addTab("Crear", jPanel7);

        jPanel3.setLayout(null);

        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setLayout(null);

        jBLimpiarConsultar.setText("Limpiar");
        jBLimpiarConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarConsultarActionPerformed(evt);
            }
        });
        jPanel9.add(jBLimpiarConsultar);
        jBLimpiarConsultar.setBounds(410, 220, 90, 23);

        jTResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Apellidos", "Telefono", "Direccion", "Genero", "Email", "Salario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTResultadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTResultados);

        jPanel9.add(jScrollPane1);
        jScrollPane1.setBounds(30, 300, 490, 110);

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Identificación");
        jPanel9.add(jLabel24);
        jLabel24.setBounds(10, 10, 80, 30);
        jPanel9.add(jTFId2);
        jTFId2.setBounds(100, 10, 130, 30);

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Nombres");
        jPanel9.add(jLabel25);
        jLabel25.setBounds(-20, 50, 120, 30);
        jPanel9.add(jTFSalario2);
        jTFSalario2.setBounds(100, 170, 130, 30);

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Apellidos");
        jPanel9.add(jLabel26);
        jLabel26.setBounds(0, 90, 80, 30);
        jPanel9.add(jTFApellido2);
        jTFApellido2.setBounds(100, 90, 130, 30);

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Genero");
        jPanel9.add(jLabel29);
        jLabel29.setBounds(0, 120, 80, 40);

        jCBGenero2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Masculino", "Femenino" }));
        jPanel9.add(jCBGenero2);
        jCBGenero2.setBounds(100, 130, 130, 20);

        jBConsultar1.setText("Consultar");
        jBConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultar1ActionPerformed(evt);
            }
        });
        jPanel9.add(jBConsultar1);
        jBConsultar1.setBounds(140, 220, 90, 23);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Salario");
        jPanel9.add(jLabel33);
        jLabel33.setBounds(0, 160, 80, 40);

        jCBTipo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Auxiliar", "Conductor", "Director de Estacion", "Director Operativo" }));
        jPanel9.add(jCBTipo2);
        jCBTipo2.setBounds(370, 20, 130, 20);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Tipo");
        jPanel9.add(jLabel34);
        jLabel34.setBounds(300, 10, 80, 40);
        jPanel9.add(jTFNombre2);
        jTFNombre2.setBounds(100, 50, 130, 30);

        jBConsultarPorTipo.setText("Consultar por Tipo");
        jBConsultarPorTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultarPorTipoActionPerformed(evt);
            }
        });
        jPanel9.add(jBConsultarPorTipo);
        jBConsultarPorTipo.setBounds(380, 60, 120, 20);

        jPanel3.add(jPanel9);
        jPanel9.setBounds(0, 0, 590, 440);

        jTPEmpleado.addTab("Consultar", jPanel3);

        jPanel4.setLayout(null);

        jPanel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.setLayout(null);

        jBModificar.setText("Modificar");
        jBModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarActionPerformed(evt);
            }
        });
        jPanel10.add(jBModificar);
        jBModificar.setBounds(160, 430, 110, 23);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Identificación");
        jPanel10.add(jLabel17);
        jLabel17.setBounds(10, 10, 80, 30);

        jTFId3.setEditable(false);
        jPanel10.add(jTFId3);
        jTFId3.setBounds(100, 10, 170, 30);
        jPanel10.add(jTFNombre3);
        jTFNombre3.setBounds(100, 50, 170, 30);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Nombres");
        jPanel10.add(jLabel18);
        jLabel18.setBounds(-20, 50, 120, 30);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Apellidos");
        jPanel10.add(jLabel19);
        jLabel19.setBounds(0, 90, 80, 30);
        jPanel10.add(jTFApellido3);
        jTFApellido3.setBounds(100, 90, 170, 30);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Genero");
        jPanel10.add(jLabel20);
        jLabel20.setBounds(0, 120, 80, 40);

        jCBGenero3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));
        jPanel10.add(jCBGenero3);
        jCBGenero3.setBounds(100, 130, 170, 20);
        jPanel10.add(jTFTelefono3);
        jTFTelefono3.setBounds(100, 260, 170, 30);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Telefono");
        jPanel10.add(jLabel21);
        jLabel21.setBounds(0, 260, 80, 40);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Dirección");
        jPanel10.add(jLabel22);
        jLabel22.setBounds(10, 170, 70, 30);
        jPanel10.add(jTFDireccion3);
        jTFDireccion3.setBounds(100, 170, 170, 30);

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Contraseña");
        jPanel10.add(jLabel31);
        jLabel31.setBounds(0, 360, 90, 30);

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Email");
        jPanel10.add(jLabel32);
        jLabel32.setBounds(0, 210, 90, 30);
        jPanel10.add(jTFEmail3);
        jTFEmail3.setBounds(100, 210, 170, 30);
        jPanel10.add(jPFPassword3);
        jPFPassword3.setBounds(100, 360, 170, 30);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Auxiliar"));

        jLabel6.setText("Estacion");

        jCBEstaciones2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCBEstaciones2PopupMenuWillBecomeVisible(evt);
            }
        });
        jCBEstaciones2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEstaciones2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jCBEstaciones2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jCBEstaciones2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel11);
        jPanel11.setBounds(280, 20, 240, 110);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Conductor"));

        jLabel7.setText("Hora Entrada");

        jLabel8.setText("Hora Salida");

        jSHoraEntrada1.setToolTipText("hora");

        jSMinutosEntrada1.setToolTipText("minutos");

        jSMinutosSalida1.setToolTipText("minutos");

        jSHoraSalida1.setToolTipText("hora");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSHoraSalida1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jSHoraEntrada1))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSMinutosEntrada1)
                    .addComponent(jSMinutosSalida1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jSHoraEntrada1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSMinutosEntrada1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jSMinutosSalida1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSHoraSalida1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jPanel10.add(jPanel12);
        jPanel12.setBounds(270, 150, 250, 160);

        jLabel9.setText("Salario");
        jPanel10.add(jLabel9);
        jLabel9.setBounds(20, 320, 70, 14);

        jTFSalario3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFSalario3ActionPerformed(evt);
            }
        });
        jPanel10.add(jTFSalario3);
        jTFSalario3.setBounds(100, 310, 170, 30);

        jPanel4.add(jPanel10);
        jPanel10.setBounds(0, 10, 540, 470);

        jTPEmpleado.addTab("Modificar", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTPEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTPEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiar1ActionPerformed
       limpiarCamposCrear();
    }//GEN-LAST:event_jBLimpiar1ActionPerformed

    private void jBLimpiarConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarConsultarActionPerformed
        limpiarCamposConsultar();
    }//GEN-LAST:event_jBLimpiarConsultarActionPerformed

    public void limpiarCamposConsultar(){
    jTFApellido2.setText("");
    jTFSalario2.setText("");
    jTFNombre2.setText("");
    jTFId2.setText("");
    jCBEstaciones1.setSelectedIndex(0);
    jCBGenero2.setSelectedIndex(0);
    jCBTipo2.setSelectedIndex(0);
    
}
    public void limpiarCamposCrear(){
    jTFApellido1.setText("");
    jTFNombre1.setText("");
    jTFDireccion1.setText("");
    jTFTelefono1.setText("");
    jTFSalario1.setText("");
    jTFEmail1.setText("");
    jTFId1.setText("");
    jCBEstaciones1.setSelectedIndex(0);
    jCBGenero1.setSelectedIndex(0);
    jCBTipo1.setSelectedIndex(0);
    
}
    private void jTResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTResultadosMouseClicked
      
        int tipo=0;
        int selectedRow = jTResultados.getSelectedRow();
        String id= "" + jTResultados.getModel().getValueAt(selectedRow, 0);
        String estacion="";
        Empleados e=controladorEmpleado.consultar(id);
        try{
            Auxiliares a=controladorAuxiliar.consultar(id);
            if(!a.getIdentificacion().equals("")){
                tipo=1;
                estacion=""+a.getEstacion();
                System.out.println("Estacion "+estacion);
            }
        }
        catch(Exception exception){
                      
        }
        try{
            Conductores c=controladorConductor.consultar(id);
            if(!c.getIdentificacion().equals("")){
                tipo=2;
                
            
            }
        }
        catch(Exception exception){
                        
        }
System.out.println("TIPO "+tipo);
        if(tipo==1){
            jCBEstaciones2.setSelectedItem(estacion);
        }
        if(tipo==2){
            
            
        }
        
        jTFId3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 0));
        jTFNombre3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 1));
        jTFApellido3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 2));
        jTFTelefono3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 3));
        jTFDireccion3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 4));
        jCBGenero3.setSelectedItem("" + jTResultados.getModel().getValueAt(selectedRow, 5));
        jTFEmail3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 6));
        jTFSalario3.setText("" + jTResultados.getModel().getValueAt(selectedRow, 7));
        jPFPassword3.setText(e.getPassword());
        
        jTPEmpleado.setSelectedIndex(2);
    }//GEN-LAST:event_jTResultadosMouseClicked

    private void jBConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultar1ActionPerformed
        LinkedList consulta = new LinkedList();
 int salario=0;
         try {
             
             try{
               salario  = Integer.parseInt(jTFSalario2.getText());
             }
               catch(Exception exc){
                   salario=0;
               }
                   
               
            consulta = controladorEmpleado.consultar(
                    jTFId2.getText(),
                    jTFNombre2.getText(),
                    jTFApellido2.getText(),
                    jCBGenero2.getSelectedItem().toString(),
                    salario);

            Object[][] s = new Object[consulta.size()][8];
            for (int i = 0; i < consulta.size(); i++) {
                Empleados emp = (Empleados) consulta.get(i);
                if (emp.getNombres() != null) {
                    s[i][0] = emp.getIdentificacion();
                    s[i][1] = emp.getNombres();
                    s[i][2] = emp.getApellidos();
                    s[i][3] = emp.getTelefono();
                    s[i][4] = emp.getDireccion();
                    s[i][5] = emp.getGenero();
                    s[i][6] = emp.getEmail();
                    s[i][7] = emp.getSalario();

                } else {
                    s = null;
                }
            }
            TableModel myModel = new DefaultTableModel(s, new String[]{"Id", "Nombres", "Apellidos",
                        "Telefono", "Direccion", "Genero", "Email", "Salario"}) {

                boolean[] canEdit = new boolean[]{false,false, false, false, false, false, false, false};

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            ///remover filas
            jTResultados.setModel(myModel);
            jTResultados.setRowSorter(new TableRowSorter(myModel));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jBConsultar1ActionPerformed

    private void jBModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarActionPerformed
        int editar = -1;
        int tipo=0;
        String id=jTFId3.getText();
        Empleados e;

        try {
             editar= controladorEmpleado.modificar(
                    jTFId3.getText(),
                    jTFNombre3.getText(),
                    jTFApellido3.getText(),
                    jTFTelefono3.getText(),
                    jTFDireccion3.getText(),
                    jTFEmail3.getText(),
                    jCBGenero3.getSelectedItem().toString(),                    
                    Integer.parseInt(jTFSalario3.getText()),
                    jPFPassword3.getText());

        } catch (Exception exc) {
            System.out.print(exc);
        }
        
        e=controladorEmpleado.consultar(id);
        try{
            Auxiliares a=controladorAuxiliar.consultar(id);
            if(!a.getIdentificacion().equals("")){
                tipo=1;
                Estaciones estacion=controladorEstacion.consultar(jCBEstaciones2.getSelectedItem().toString());
                editar=controladorAuxiliar.modificar(e, estacion);
            }
        }
        catch(Exception exception){
                      
        }
        try{
            Conductores c=controladorConductor.consultar(id);
            if(!c.getIdentificacion().equals("")){
                tipo=2;
                int horaSalida=(Integer)jSHoraSalida1.getValue();
            int horaEntrada=(Integer)jSHoraEntrada1.getValue();
            int minutoSalida=(Integer)jSMinutosSalida1.getValue();
            int minutoEntrada=(Integer)jSMinutosEntrada1.getValue();
            Time hora_inicio= new Time(horaEntrada, minutoEntrada, 0);
            Time hora_salida= new Time(horaSalida, minutoSalida, 0);
                editar=controladorConductor.modificar(e, hora_inicio, 
                        hora_salida);
            }
        }
        catch(Exception exception){
                        
        }
        
        try{
            DirectoresEstacion direc=controladorDirEstacion.consultar(id);
            if(!direc.getIdentificacion().equals("")){
                tipo=3;
              
                editar=controladorDirEstacion.modificar(e);
            }
        }
        catch(Exception exception){
                        
        }
        
        try{
            DirectoresOperativos direc=controladorDirOperativo.consultar(id);
            if(!direc.getIdentificacion().equals("")){
                tipo=4;
              
                editar=controladorDirOperativo.modificar(e);
            }
        }
        catch(Exception exception){
                        
        }
        
        
        System.out.println("El tipo es " +tipo);
        if (editar == -1) {
            JOptionPane.showMessageDialog(this, "No su pudo modificar el pasajero", "Error Base Datos", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "modificado correctamente", "Base Datos", JOptionPane.INFORMATION_MESSAGE);
            limpiarCamposConsultar();
            jTFId2.setText(jTFId3.getText());
            jBConsultar1.doClick();
            jTPEmpleado.setSelectedIndex(1);
           
        }
    }//GEN-LAST:event_jBModificarActionPerformed

    private void jTFSalario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFSalario1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFSalario1ActionPerformed

    private void jCBTipo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBTipo1ItemStateChanged
        // TODO add your handling code here:

        if (jCBTipo1.getSelectedIndex() == 0) {

            jBCrearConductor.setEnabled(false);
            jBCrearDirectorEstacion.setEnabled(false);
            jBCrearDirectorOperativo.setEnabled(false);
            jBCrearAuxiliar.setEnabled(false);

        }
        if (jCBTipo1.getSelectedItem() == "Auxiliar") {

            jBCrearConductor.setEnabled(false);
            jBCrearDirectorEstacion.setEnabled(false);
            jBCrearDirectorOperativo.setEnabled(false);
            jBCrearAuxiliar.setEnabled(true);

        }
        if (jCBTipo1.getSelectedItem() == "Conductor") {

            jBCrearDirectorEstacion.setEnabled(false);
            jBCrearDirectorOperativo.setEnabled(false);
            jBCrearAuxiliar.setEnabled(false);
            jBCrearConductor.setEnabled(true);
        }

        if (jCBTipo1.getSelectedItem() == "Director Estacion") {

            jBCrearDirectorOperativo.setEnabled(false);
            jBCrearAuxiliar.setEnabled(false);
            jBCrearConductor.setEnabled(false);
            jBCrearDirectorEstacion.setEnabled(true);
        }

        if (jCBTipo1.getSelectedItem() == "Director Operativo") {

            jBCrearAuxiliar.setEnabled(false);
            jBCrearConductor.setEnabled(false);
            jBCrearDirectorEstacion.setEnabled(false);
            jBCrearDirectorOperativo.setEnabled(true);
        }
    }//GEN-LAST:event_jCBTipo1ItemStateChanged

   
    private void jBCrearAuxiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearAuxiliarActionPerformed
        // TODO add your handling code here:
        int guardar = -1;
        try {


            String id = jTFId1.getText();
            String nombre = jTFNombre1.getText();
            String apellido = jTFApellido1.getText();
            String telefono = jTFTelefono1.getText();
            String direccion = jTFDireccion1.getText();
            String email = jTFEmail1.getText();
            String genero = jCBGenero1.getSelectedItem().toString();
            int salario = Integer.parseInt(jTFSalario1.getText());
            controladorEmpleado.insertar(id, nombre, apellido, telefono, direccion, genero, email, salario);
            Empleados e = controladorEmpleado.consultar(id);
            Estaciones estacion=controladorEstacion.consultar(jCBEstaciones1.getSelectedItem().toString());
            
             guardar = controladorAuxiliar.insertar(e, estacion);

        } catch (Exception e) {
        }
        if (guardar == -1) {
            JOptionPane.showMessageDialog(this, "No se pudo crear ", "Error Base Datos", JOptionPane.ERROR_MESSAGE);
        } else {

            if (guardar == 1) {

                JOptionPane.showMessageDialog(this, "Ya existe el Empleado ", "Error", ERROR);


            } else {
                JOptionPane.showMessageDialog(this, "Empleado Creado correctamente", "Sistema", JOptionPane.INFORMATION_MESSAGE);

                // limpiarCamposConsultar();
                jTFId2.setText(jTFId1.getText());
                jBConsultar1.doClick();
                jTPEmpleado.setSelectedIndex(1);
                limpiarCamposCrear();
            }
        }
    }//GEN-LAST:event_jBCrearAuxiliarActionPerformed

    private void jBCrearConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearConductorActionPerformed
        // TODO add your handling code here:
       int guardar = -1;
       
        try {

            String id = jTFId1.getText();
            String nombre = jTFNombre1.getText();
            String apellido = jTFApellido1.getText();
            String telefono = jTFTelefono1.getText();
            String direccion = jTFDireccion1.getText();
            String email = jTFEmail1.getText();
            String genero = jCBGenero1.getSelectedItem().toString();
            int salario = Integer.parseInt(jTFSalario1.getText());

            
           
            int horaSalida=(Integer)jSHoraSalida.getValue();
            int horaEntrada=(Integer)jSHoraEntrada.getValue();
            int minutoSalida=(Integer)jSMinutosSalida.getValue();
            int minutoEntrada=(Integer)jSMinutosEntrada.getValue();
            Time hora_inicio= new Time(horaEntrada, minutoEntrada, 0);
            Time hora_salida= new Time(horaSalida, minutoSalida, 0);
                    
  
            controladorEmpleado.insertar(id, nombre, apellido, telefono, direccion, genero, email, salario);
            Empleados e = controladorEmpleado.consultar(id);
             
            
          //  Time hora_inicio=(Time)jTFHoraEntrada1.getText();
            
            
             guardar = controladorConductor.insertar(e, hora_inicio, hora_salida);

        } catch (Exception e) {
            e.printStackTrace();
        }
        if (guardar == -1) {
            
            JOptionPane.showMessageDialog(this, "No se pudo crear ", "Error Base Datos", JOptionPane.ERROR_MESSAGE);
        } else {

            if (guardar == 1) {

                JOptionPane.showMessageDialog(this, "Ya existe el Empleado ", "Error", ERROR);


            } else {
                JOptionPane.showMessageDialog(this, "Empleado Creado correctamente", "Sistema", JOptionPane.INFORMATION_MESSAGE);

                // limpiarCamposConsultar();
                jTFId2.setText(jTFId1.getText());
                jBConsultar1.doClick();
                jTPEmpleado.setSelectedIndex(1);
                limpiarCamposCrear();
            }
        }
    
    }//GEN-LAST:event_jBCrearConductorActionPerformed

    private void jBCrearDirectorEstacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearDirectorEstacionActionPerformed
        // TODO add your handling code here:
          int guardar = -1;
        try {

            String id = jTFId1.getText();
            String nombre = jTFNombre1.getText();
            String apellido = jTFApellido1.getText();
            String telefono = jTFTelefono1.getText();
            String direccion = jTFDireccion1.getText();
            String email = jTFEmail1.getText();
            String genero = jCBGenero1.getSelectedItem().toString();
            int salario = Integer.parseInt(jTFSalario1.getText());
            controladorEmpleado.insertar(id, nombre, apellido, telefono, direccion, genero, email, salario);
            Empleados emp = controladorEmpleado.consultar(id);
            
                   guardar = controladorDirEstacion.insertar(emp);

        } catch (Exception e) {
        }
        if (guardar == -1) {
            JOptionPane.showMessageDialog(this, "No se pudo crear ", "Error Base Datos", JOptionPane.ERROR_MESSAGE);
        } else {

            if (guardar == 1) {

                JOptionPane.showMessageDialog(this, "Ya existe el Empleado ", "Error", ERROR);


            } else {
                JOptionPane.showMessageDialog(this, "Empleado Creado correctamente", "Sistema", JOptionPane.INFORMATION_MESSAGE);

                // limpiarCamposConsultar();
                jTFId2.setText(jTFId1.getText());
                jBConsultar1.doClick();
                jTPEmpleado.setSelectedIndex(1);
                limpiarCamposCrear();
            }
        }
    
    }//GEN-LAST:event_jBCrearDirectorEstacionActionPerformed

    private void jBCrearDirectorOperativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearDirectorOperativoActionPerformed
        // TODO add your handling code here:
         int guardar = -1;
        try {

            String id = jTFId1.getText();
            String nombre = jTFNombre1.getText();
            String apellido = jTFApellido1.getText();
            String telefono = jTFTelefono1.getText();
            String direccion = jTFDireccion1.getText();
            String email = jTFEmail1.getText();
            String genero = jCBGenero1.getSelectedItem().toString();
            int salario = Integer.parseInt(jTFSalario1.getText());
            controladorEmpleado.insertar(id, nombre, apellido, telefono, direccion, genero, email, salario);
            Empleados emp = controladorEmpleado.consultar(id);
            
                   guardar = controladorDirOperativo.insertar(emp);

        } catch (Exception e) {
        }
        if (guardar == -1) {
            JOptionPane.showMessageDialog(this, "No se pudo crear ", "Error Base Datos", JOptionPane.ERROR_MESSAGE);
        } else {

            if (guardar == 1) {

                JOptionPane.showMessageDialog(this, "Ya existe el Empleado ", "Error", ERROR);


            } else {
                JOptionPane.showMessageDialog(this, "Empleado Creado correctamente", "Sistema", JOptionPane.INFORMATION_MESSAGE);

                // limpiarCamposConsultar();
                jTFId2.setText(jTFId1.getText());
                jBConsultar1.doClick();
                jTPEmpleado.setSelectedIndex(1);
                limpiarCamposCrear();
            }
        }
    }//GEN-LAST:event_jBCrearDirectorOperativoActionPerformed

    private void jCBEstaciones1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBEstaciones1PopupMenuWillBecomeVisible
        // TODO add your handling code here:
         jCBEstaciones1.setModel(
                new javax.swing.DefaultComboBoxModel(controladorEstacion.listar()));
    }//GEN-LAST:event_jCBEstaciones1PopupMenuWillBecomeVisible

    private void jCBEstaciones2PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBEstaciones2PopupMenuWillBecomeVisible
        // TODO add your handling code here:
         jCBEstaciones2.setModel(
                new javax.swing.DefaultComboBoxModel(controladorEstacion.listar()));
    }//GEN-LAST:event_jCBEstaciones2PopupMenuWillBecomeVisible

    private void jTFSalario3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFSalario3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFSalario3ActionPerformed

    private void jBConsultarPorTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultarPorTipoActionPerformed
            LinkedList consulta = new LinkedList();
     
         try {         
          String tipoEmpleado=jCBTipo2.getSelectedItem().toString();                  
              
          if(tipoEmpleado.equalsIgnoreCase("Auxiliar")){
          
           consulta = controladorAuxiliar.consultarAll();

            Object[][] s = new Object[consulta.size()][9];
            for (int i = 0; i < consulta.size(); i++) {
                Auxiliares aux = (Auxiliares) consulta.get(i);
                if (aux.getIdentificacion() != null) {
                    Empleados emp=controladorEmpleado.consultar(aux.getIdentificacion());
                    
                    s[i][0] = aux.getIdentificacion();
                    s[i][1] = emp.getNombres();
                    s[i][2] = emp.getApellidos();
                    s[i][3] = emp.getTelefono();
                    s[i][4] = emp.getDireccion();
                    s[i][5] = emp.getGenero();
                    s[i][6] = emp.getEmail();
                    s[i][7] = emp.getSalario();
                    s[i][8]=  aux.getEstacion();

                } else {
                    s = null;
                }
            }
            TableModel myModel = new DefaultTableModel(s, new String[]{"Id", "Nombres", "Apellidos",
                        "Telefono", "Direccion", "Genero", "Email", "Salario", "Estacion"}) {

                boolean[] canEdit = new boolean[]{false,false, false, false, false, false, false, false, false};

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            ///remover filas
            jTResultados.setModel(myModel);
            jTResultados.setRowSorter(new TableRowSorter(myModel));}
          
          
           if(tipoEmpleado.equalsIgnoreCase("Conductor")){
          
           consulta = controladorConductor.consultarAll();

            Object[][] s = new Object[consulta.size()][10];
            for (int i = 0; i < consulta.size(); i++) {
                Conductores conductor = (Conductores) consulta.get(i);
                if (conductor.getIdentificacion() != null) {
                    Empleados emp=controladorEmpleado.consultar(conductor.getIdentificacion());
                    
                    s[i][0] = conductor.getIdentificacion();
                    s[i][1] = emp.getNombres();
                    s[i][2] = emp.getApellidos();
                    s[i][3] = emp.getTelefono();
                    s[i][4] = emp.getDireccion();
                    s[i][5] = emp.getGenero();
                    s[i][6] = emp.getEmail();
                    s[i][7] = emp.getSalario();
                    s[i][8]=  conductor.getHoraEntrada();                    
                    s[i][9]=  conductor.getHoraSalida();

                } else {
                    s = null;
                }
            }
            TableModel myModel = new DefaultTableModel(s, new String[]{"Id", "Nombres", "Apellidos",
                        "Telefono", "Direccion", "Genero", "Email", "Salario", "Entrada", "Salida"}) {

                boolean[] canEdit = new boolean[]{false,false, false, false, false, false, false, false, false, false};

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            ///remover filas
            jTResultados.setModel(myModel);
            jTResultados.setRowSorter(new TableRowSorter(myModel));}
          
          if(tipoEmpleado.equalsIgnoreCase("Director de Estacion")){
          
           consulta = controladorDirEstacion.consultarAll();

            Object[][] s = new Object[consulta.size()][8];
            for (int i = 0; i < consulta.size(); i++) {
                DirectoresEstacion director = (DirectoresEstacion) consulta.get(i);
                if (director.getIdentificacion() != null) {
                    Empleados emp=controladorEmpleado.consultar(director.getIdentificacion());
                    
                    s[i][0] = director.getIdentificacion();
                    s[i][1] = emp.getNombres();
                    s[i][2] = emp.getApellidos();
                    s[i][3] = emp.getTelefono();
                    s[i][4] = emp.getDireccion();
                    s[i][5] = emp.getGenero();
                    s[i][6] = emp.getEmail();
                    s[i][7] = emp.getSalario();

                } else {
                    s = null;
                }
            }
            TableModel myModel = new DefaultTableModel(s, new String[]{"Id", "Nombres", "Apellidos",
                        "Telefono", "Direccion", "Genero", "Email", "Salario"}) {

                boolean[] canEdit = new boolean[]{false, false, false, false, false, false, false, false};

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            ///remover filas
            jTResultados.setModel(myModel);
            jTResultados.setRowSorter(new TableRowSorter(myModel));}
          
          if(tipoEmpleado.equalsIgnoreCase("Director Operativo")){
          
           consulta = controladorDirOperativo.consultarAll();

            Object[][] s = new Object[consulta.size()][8];
            for (int i = 0; i < consulta.size(); i++) {
                DirectoresOperativos director = (DirectoresOperativos) consulta.get(i);
                if (director.getIdentificacion() != null) {
                    Empleados emp=controladorEmpleado.consultar(director.getIdentificacion());
                    
                    s[i][0] = director.getIdentificacion();
                    s[i][1] = emp.getNombres();
                    s[i][2] = emp.getApellidos();
                    s[i][3] = emp.getTelefono();
                    s[i][4] = emp.getDireccion();
                    s[i][5] = emp.getGenero();
                    s[i][6] = emp.getEmail();
                    s[i][7] = emp.getSalario();

                } else {
                    s = null;
                }
            }
            TableModel myModel = new DefaultTableModel(s, new String[]{"Id", "Nombres", "Apellidos",
                        "Telefono", "Direccion", "Genero", "Email", "Salario"}) {

                boolean[] canEdit = new boolean[]{false, false, false, false, false, false, false, false};

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            ///remover filas
            jTResultados.setModel(myModel);
            jTResultados.setRowSorter(new TableRowSorter(myModel));}
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jBConsultarPorTipoActionPerformed

    private void jCBEstaciones2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEstaciones2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBEstaciones2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jBConsultar1;
    private javax.swing.JButton jBConsultarPorTipo;
    private javax.swing.JButton jBCrearAuxiliar;
    private javax.swing.JButton jBCrearConductor;
    private javax.swing.JButton jBCrearDirectorEstacion;
    private javax.swing.JButton jBCrearDirectorOperativo;
    private javax.swing.JButton jBLimpiar1;
    private javax.swing.JButton jBLimpiarConsultar;
    private javax.swing.JButton jBModificar;
    private javax.swing.JComboBox jCBEstaciones1;
    private javax.swing.JComboBox jCBEstaciones2;
    private javax.swing.JComboBox jCBGenero1;
    private javax.swing.JComboBox jCBGenero2;
    private javax.swing.JComboBox jCBGenero3;
    private javax.swing.JComboBox jCBTipo1;
    private javax.swing.JComboBox jCBTipo2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPFPassword3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSpinner jSHoraEntrada;
    private javax.swing.JSpinner jSHoraEntrada1;
    private javax.swing.JSpinner jSHoraSalida;
    private javax.swing.JSpinner jSHoraSalida1;
    private javax.swing.JSpinner jSMinutosEntrada;
    private javax.swing.JSpinner jSMinutosEntrada1;
    private javax.swing.JSpinner jSMinutosSalida;
    private javax.swing.JSpinner jSMinutosSalida1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFApellido1;
    private javax.swing.JTextField jTFApellido2;
    private javax.swing.JTextField jTFApellido3;
    private javax.swing.JTextField jTFDireccion1;
    private javax.swing.JTextField jTFDireccion3;
    private javax.swing.JTextField jTFEmail1;
    private javax.swing.JTextField jTFEmail3;
    private javax.swing.JTextField jTFId1;
    private javax.swing.JTextField jTFId2;
    private javax.swing.JTextField jTFId3;
    private javax.swing.JTextField jTFNombre1;
    private javax.swing.JTextField jTFNombre2;
    private javax.swing.JTextField jTFNombre3;
    private javax.swing.JTextField jTFSalario1;
    private javax.swing.JTextField jTFSalario2;
    private javax.swing.JTextField jTFSalario3;
    private javax.swing.JTextField jTFTelefono1;
    private javax.swing.JTextField jTFTelefono3;
    private javax.swing.JTabbedPane jTPEmpleado;
    private javax.swing.JTable jTResultados;
    // End of variables declaration//GEN-END:variables
}
